function cmd = ANTs_cmd_VPMB(invt1brain_down, func01, pw, def)

% ORIGINAL PARAMETERS from antsRegistrationSyN
cmd.linear = strcat(sprintf('antsRegistration --dimensionality 3 --float 0'), ...
    sprintf(' --initial-moving-transform [%s,%s,1]', invt1brain_down, func01), ... % approximate the coordinates of the two image
    sprintf(' --transform Rigid[0.1]'), ...                                        % 1st: rigid body transformation
    sprintf(' --metric MI[%s,%s,1,32,Regular,0.25]', invt1brain_down, func01), ...
    sprintf(' --convergence [1000x500x250x100,1e-6,10]'), ...
    sprintf(' --shrink-factors 8x4x2x1'), ...
    sprintf(' --smoothing-sigmas 3x2x1x0vox'), ...
    sprintf(' --transform Affine[0.1]'), ...                                       % 2nd: affine transformation
    sprintf(' --metric MI[%s,%s,1,32,Regular,0.25]', invt1brain_down, func01), ...
    sprintf(' --convergence [1000x500x250x100,1e-6,10]'), ...
    sprintf(' --shrink-factors 8x4x2x1'), ...
    sprintf(' --smoothing-sigmas 3x2x1x0vox'), ...
    sprintf(' --use-histogram-matching 0'), ...
    sprintf(' --collapse-output-transforms 0'), ...
    sprintf(' --output [%s/func012invt1_down_%s_l_OrigParam_NoCollapse_,%s/func012invt1_down_l_OrigParam_warped_%s_NoCollapse.nii.gz,%s/func012invt1_down_inv_l_OrigParam_warped_%s_NoCollapse.nii.gz]', ...
    pw(1:end-1), def.type, pw(1:end-1), def.type, pw(1:end-1), def.type), ...
    sprintf(' --verbose 1'));

% ORIGINAL PARAMETERS from antsRegistrationSyN
cmd.orig = strcat(sprintf('antsRegistration --dimensionality 3 --float 0'), ...
    sprintf(' --initial-moving-transform [%s,%s,1]', invt1brain_down, func01), ... % approximate the coordinates of the two image
    sprintf(' --transform Rigid[0.1]'), ...                                        % 1st: rigid body transformation
    sprintf(' --metric MI[%s,%s,1,32,Regular,0.25]', invt1brain_down, func01), ...
    sprintf(' --convergence [1000x500x250x100,1e-6,10]'), ...
    sprintf(' --shrink-factors 8x4x2x1'), ...
    sprintf(' --smoothing-sigmas 3x2x1x0vox'), ...
    sprintf(' --transform Affine[0.1]'), ...                                       % 2nd: affine transformation
    sprintf(' --metric MI[%s,%s,1,32,Regular,0.25]', invt1brain_down, func01), ...
    sprintf(' --convergence [1000x500x250x100,1e-6,10]'), ...
    sprintf(' --shrink-factors 8x4x2x1'), ...
    sprintf(' --smoothing-sigmas 3x2x1x0vox'), ...
    sprintf(' --transform SyN[0.1,3,0]'), ...                                      % 3rd: non-linear (SyN) transformation
    sprintf(' --metric CC[%s,%s,1,4]', invt1brain_down, func01), ...
    sprintf(' --convergence [100x70x50x20,1e-6,10]'), ...
    sprintf(' --shrink-factors 8x4x2x1'), ...
    sprintf(' --smoothing-sigmas 3x2x1x0vox'), ...
    sprintf(' --restrict-deformation %s', def.weight), ...
    sprintf(' --use-histogram-matching 0'), ...
    sprintf(' --collapse-output-transforms 0'), ...
    sprintf(' --output [%s/func012invt1_down_%s_lnl_OrigParam_NoCollapse_,%s/func012invt1_down_lnl_OrigParam_warped_%s_NoCollapse.nii.gz,%s/func012invt1_down_inv_lnl_OrigParam_warped_%s_NoCollapse.nii.gz]', ...
    pw(1:end-1), def.type, pw(1:end-1), def.type, pw(1:end-1), def.type), ...
    sprintf(' --verbose 1'));

% ORIGINAL PARAMETERS for rigid+affine and NEW PARAMETERS for SyN
cmd.moderate = strcat(sprintf('antsRegistration --dimensionality 3 --float 0'), ...
    sprintf(' --initial-moving-transform [%s,%s,1]', invt1brain_down, func01), ... % approximate the coordinates of the two image
    sprintf(' --transform Rigid[0.1]'), ...                                        % 1st: rigid body transformation
    sprintf(' --metric MI[%s,%s,1,32,Regular,0.25]', invt1brain_down, func01), ...
    sprintf(' --convergence [1000x500x250x100,1e-6,10]'), ...
    sprintf(' --shrink-factors 8x4x2x1'), ...
    sprintf(' --smoothing-sigmas 3x2x1x0vox'), ...
    sprintf(' --transform Affine[0.1]'), ...                                       % 2nd: affine transformation
    sprintf(' --metric MI[%s,%s,1,32,Regular,0.25]', invt1brain_down, func01), ...
    sprintf(' --convergence [1000x500x250x100,1e-6,10]'), ...
    sprintf(' --shrink-factors 8x4x2x1'), ...
    sprintf(' --smoothing-sigmas 3x2x1x0vox'), ...
    sprintf(' --transform SyN[0.1,3,0]'), ...                                      % 3rd: non-linear (SyN) transformation
    sprintf(' --metric CC[%s,%s,1,4]', invt1brain_down, func01), ...
    sprintf(' --convergence [100x50,1e-6,10]'), ...
    sprintf(' --shrink-factors 2x1'), ...
    sprintf(' --smoothing-sigmas 1x0.5vox'), ...
    sprintf(' --restrict-deformation %s', def.weight), ...
    sprintf(' --use-estimate-learning-rate-once'), ...
    sprintf(' --use-histogram-matching'), ...
    sprintf(' --collapse-output-transforms 0'), ...
    sprintf(' --output [%s/func012invt1_down_%s_lnl_ModerateParam_NoCollapse_,%s/func012invt1_down_lnl_ModerateParam_warped_%s_NoCollapse.nii.gz,%s/func012invt1_down_inv_lnl_ModerateParam_warped_%s_NoCollapse.nii.gz]', ...
    pw(1:end-1), def.type, pw(1:end-1), def.type, pw(1:end-1), def.type), ...
    sprintf(' --verbose 1'));

% ALL TRANSFORMATION WITH SAME PARAMETERS from MSc thesis
cmd.strict = strcat(sprintf('antsRegistration --dimensionality 3 --float 0'), ...
    sprintf(' --initial-moving-transform [%s,%s,1]', invt1brain_down, func01), ... % approximate the coordinates of the two images
    sprintf(' --transform Rigid[0.1]'), ...                                        % 1st: rigid body transformation
    sprintf(' --metric MI[%s,%s,1,32,Regular,0.25]', invt1brain_down, func01), ...
    sprintf(' --convergence [100x50,1e-6,10]'), ...
    sprintf(' --shrink-factors 2x1'), ...
    sprintf(' --smoothing-sigmas 1x0.5vox'), ...
    sprintf(' --transform Affine[0.1]'), ...                                       % 2nd: affine transformation
    sprintf(' --metric MI[%s,%s,1,32,Regular,0.25]', invt1brain_down, func01), ...
    sprintf(' --convergence [100x50,1e-6,10]'), ...
    sprintf(' --shrink-factors 2x1'), ...
    sprintf(' --smoothing-sigmas 1x0.5vox'), ...
    sprintf(' --transform SyN[0.1,3,0]'), ...                                      % 3rd: non-linear (SyN) transformation
    sprintf(' --metric CC[%s,%s,1,4]', invt1brain_down, func01), ...
    sprintf(' --convergence [100x50,1e-6,10]'), ...
    sprintf(' --shrink-factors 2x1'), ...
    sprintf(' --smoothing-sigmas 1x0.5vox'), ...
    sprintf(' --restrict-deformation %s', def.weight), ...
    sprintf(' --use-estimate-learning-rate-once'), ...
    sprintf(' --use-histogram-matching'), ...
    sprintf(' --collapse-output-transforms 0'), ...
    sprintf(' --output [%s/func012invt1_down_%s_lnl_StrictParam_NoCollapse_,%s/func012invt1_down_lnl_StrictParam_warped_NoCollapse_%s.nii.gz,%s/func012invt1_down_inv_lnl_StrictParam_warped_NoCollapse_%s.nii.gz]', ...
    pw(1:end-1), def.type, pw(1:end-1), def.type, pw(1:end-1), def.type), ...
    sprintf(' --verbose 1'));